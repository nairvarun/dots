# vi mode
set -o vi

# PS1 ( https://ezprompt.net/ )
# get current branch in git repo

BLACK='\[\e[30m\]'
RED='\[\e[31m\]'
GREEN='\[\e[32m\]'
YELLOW='\[\e[33m\]'
BLUE='\[\e[34m\]'
MAGENTA='\[\e[35m\]'
CYAN='\[\e[36m\]'
WHITE='\[\e[37m\]'
ENDC='\[\e[m\]'

function _k8s {
        CLUSTER=`kubectl config current-context 2> /dev/null`
        if [ ! "${CLUSTER}" == "" ]; then
                echo "[${CLUSTER}]"
        else
                echo ""
        fi
}

function _git {
        BRANCH=`git branch --show-current 2> /dev/null`
        if [ ! "${BRANCH}" == "" ]; then
                if [ -z "$(git status --porcelain)" ]; then
                        STAT=""
                else
                        STAT="*"
                fi
								echo "[${BRANCH}${STAT}]"
        else
                echo ""
        fi
}

function _tmux {
        if [ ! "$(echo $TMUX)" == "" ]; then
                echo "'"
        else
                echo ""
				fi
}

function _pyvenv {
	if [ -z "$VIRTUAL_ENV" ]; then
		echo ""
	else
		echo [`basename $VIRTUAL_ENV`]
	fi
}

# function _parse_git_status {
#         git status --short |
#         awk '{ print $1 }' |
#         sort | uniq |
#         awk '{print}' ORS='' |
#         awk '{
#                 gsub(/\?+/,"?");
#                 gsub(/\M+/,"!");
#                 gsub(/\T+/,"t");
#                 gsub(/\A+/,"+");
#                 gsub(/\D+/,"x");
#                 gsub(/\R+/,"r");
#                 gsub(/\C+/,"c");
#                 gsub(/\U+/,"u");
#                 print tolower($0);
#         }'
# }

# # get current status of git repo
# function _parse_git_dirty {
#         status=`git status 2>&1 | tee`
#         dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
#         untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
#         ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
#         newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
#         renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
#         deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
#         bits=''
#         if [ "${renamed}" == "0" ]; then
#                 bits=">${bits}"
#         fi
#         if [ "${ahead}" == "0" ]; then
#                 bits="*${bits}"
#         fi
#         if [ "${newfile}" == "0" ]; then
#                 bits="+${bits}"
#         fi
#         if [ "${untracked}" == "0" ]; then
#                 bits="?${bits}"
#         fi
#         if [ "${deleted}" == "0" ]; then
#                 bits="x${bits}"
#         fi
#         if [ "${dirty}" == "0" ]; then
#                 bits="!${bits}"
#         fi
#         if [ ! "${bits}" == "" ]; then
#                 echo " ${bits}"
#         else
#                 echo ""
#         fi
# }

# git status --short |
# awk '{ print $1 }' |
# sort |
# uniq |
# awk '{print}' ORS='' |
# awk '{
#         gsub(/\?+/,"?");
#         gsub(/\M+/,"!");
#         gsub(/\T+/,"t");
#         gsub(/\A+/,"+");
#         gsub(/\D+/,"x");
#         gsub(/\R+/,"r");
#         gsub(/\C+/,"c");
#         gsub(/\U+/,"u");
#         print tolower($0);
# }'

export PS1="$RED\`_pyvenv\`$ENDC$MAGENTA(\`_tmux\`\W)$ENDC$GREEN\`_git\`$ENDC$BLUE\`_k8s\`$ENDC "
export VIRTUAL_ENV_DISABLE_PROMPT=1

# so that tmux uses 256 colors
alias tst='cd /home/nv/.tst/'
alias dev='cd /home/nv/dev/'
alias t='TERM=xterm-256color tmux -u'
alias g='git'
alias k='kubectl'
complete -o default -F __start_kubectl k
source ~/.kind-completion
# alias bat="batcat --style=plain"
alias p="python3 -q"

# python
# venv ==> activate/deactivate .venv and make .venv if it does't exist
venv() {
    if [ "$VIRTUAL_ENV" == "" ]
    then
        if [ -d "./.venv/" ]
        then
            source ./.venv/bin/activate
        elif [ -d "./.git/" ]
        then
            python3 -m venv .venv && source ./.venv/bin/activate
        fi
    else
        deactivate
    fi
}

# requirements.txt
alias pipr="pip install -r requirements.txt"
alias pi="pip install"

pa() {
    if [ -d "/home/nv/py/virtual-env/all" ]
    then
        source /home/nv/py/virtual-env/all/bin/activate
    else
        echo "where is paul?"
    fi
}

# ipython
alias ipython="ipython --no-banner --InteractiveShell.editing_mode=vi"
# alias ipython="ipython --no-banner --InteractiveShell.editing_mode=vi --InteractiveaShellApp.extensions="['autoreload']""

# # fzf
# # colors + search hidden files ignoring .git/
# export FZF_DEFAULT_COMMAND="find \( -name '.venv' -o -name '.git' -o -name 'node_modules' \) -prune -o -print"
# # --preview '(bat {} --style numbers,changes --color=always--style numbers,changes --color=always || tree {}) 2> /dev/null' \
# # dafault
# export FZF_DEFAULT_OPTS="--bind=alt-k:up,alt-j:down,alt-K:preview-page-up,alt-J:preview-page-down"
# # catppuccin
# # export FZF_DEFAULT_OPTS="--bind=alt-k:up,alt-j:down,alt-K:preview-page-up,alt-J:preview-page-down \
# #                                              --color=bg+:#302D41,bg:#1E1E2E,spinner:#F8BD96,hl:#F28FAD \
# #                                              --color=fg:#D9E0EE,header:#F28FAD,info:#DDB6F2,pointer:#F8BD96 \
# #                                              --color=marker:#F8BD96,fg+:#F2CDCD,prompt:#DDB6F2,hl+:#F28FAD"
# export FZF_COMPLETION_TRIGGER=','

# # ripgrep
# # search hidden files ignoring .git/
# alias rg="rg --hidden --glob '!.git' --glob '!.venv' --glob '!node_modules'"

# # fzf ==> cd
# alias cdf='cd $(find \( -name ".venv" -o -name ".git" -o -name "node_modules" \) -prune -o -type d -print | fzf)'

# # fzf and ripgrep ==> nvim
# edit_fzf()
# {
#     # if in tmux
#     if [ "$TMUX" != "" ] && [ "$1" != "" ]
#     then
#         if [ "$1" = "sv" ]
#         then
#             fzf -e | xargs -r echo $EDITOR | xargs -r tmux split-window -vd
#         elif [ "$1" = "s" ]
#         then
#             fzf -e | xargs -r echo $EDITOR | xargs -r tmux split-window -hd
#         elif [ "$1" = "n" ]
#         then
#             fzf -e | xargs -r echo $EDITOR | xargs -r tmux new-window -d
#         else
#             fzf -e | xargs -r $EDITOR
#         fi
#     else
#         fzf -e | xargs -r $EDITOR
#     fi
# }
# alias eff=edit_fzf

# edit_rg()
# {
#     # if in tmux
#     if [ "$TMUX" != "" ] && [ "$1" != "" ]
#     then
#         if [ "$1" = "sv" ]
#         then
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r echo $EDITOR | xargs -r tmux split-window -vd
#         elif [ "$1" = "s" ]
#         then
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r echo $EDITOR | xargs -r tmux split-window -hd
#         elif [ "$1" = "n" ]
#         then
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r echo $EDITOR | xargs -r tmux new-window -d
#         else
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r $EDITOR
#         fi
#     else
#         rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r $EDITOR
#     fi
# }
# alias erg=edit_rg

# btop
alias btop="btop --utf-force"

# default editor
export EDITOR="/bin/vi"

# misc aliases
alias sbc="source ~/.bashrc"
alias xx="xdg-open $1 &>/dev/null"
alias q="vi /home/nv/.nv/.q"
alias gul="cat /home/nv/.nv/gul.sixel"
alias d="docker"
# alias up="sudo apt update && sudo apt upgrade"
alias up="sudo dnf update"

alias la="ls -a"
alias ll="ls -al"

alias astronvim="NVIM_APPNAME=nvim/AstroNvim nvim"
alias lazyvim="NVIM_APPNAME=nvim/LazyVim nvim"
alias nvchad="NVIM_APPNAME=nvim/NvChad nvim"

export PATH=$PATH:/usr/local/go/bin:/home/nv/go/bin
source <(kubectl completion bash)
alias k=kubectl
complete -o default -F __start_kubectl k
timedatectl set-local-rtc 1 --adjust-system-clock

alias whatismyip="curl https://checkip.amazonaws.com/"
# systemctl --user restart pipewire{,-pulse}.socket
