# vi mode
set -o vi

# PS1 ( https://ezprompt.net/ )

# get current branch in git repo
function _parse_git_branch {
        BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
        if [ ! "${BRANCH}" == "" ]
        then
                STAT=`_parse_git_dirty`
                echo "[${BRANCH}${STAT}]"
        else
                echo ""
        fi
}

# get current status of git repo
function _parse_git_dirty {
        status=`git status 2>&1 | tee`
        dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
        untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
        ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
        newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
        renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
        deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
        bits=''
        if [ "${renamed}" == "0" ]; then
                bits=">${bits}"
        fi
        if [ "${ahead}" == "0" ]; then
                bits="*${bits}"
        fi
        if [ "${newfile}" == "0" ]; then
                bits="+${bits}"
        fi
        if [ "${untracked}" == "0" ]; then
                bits="?${bits}"
        fi
        if [ "${deleted}" == "0" ]; then
                bits="x${bits}"
        fi
        if [ "${dirty}" == "0" ]; then
                bits="!${bits}"
        fi
        if [ ! "${bits}" == "" ]; then
                echo " ${bits}"
        else
                echo ""
        fi
}

export PS1="\[\e[35m\]\W\[\e[m\]\[\e[32m\]\`_parse_git_branch\`\[\e[m\] "

# so that tmux uses 256 colors
alias tmux='TERM=xterm-256color tmux'
alias g='git'
alias k='kubectl'
complete -o default -F __start_kubectl k

# python
# venv ==> activate/deactivate .venv and make .venv if it does't exist
venv() {
    if [ "$VIRTUAL_ENV" == "" ]
    then
        if [ -d "./.venv/" ]
        then
            source ./.venv/bin/activate
        elif [ -d "./.git/" ]
        then
            python3 -m venv .venv && source ./.venv/bin/activate
        fi
    else
        deactivate
    fi
}

# requirements.txt
alias pipr="pip install -r requirements.txt"

# ipython
alias ipython="ipython --no-banner --InteractiveShell.editing_mode=vi"
# alias ipython="ipython --no-banner --InteractiveShell.editing_mode=vi --InteractiveaShellApp.extensions="['autoreload']""

# # fzf
# # colors + search hidden files ignoring .git/
# export FZF_DEFAULT_COMMAND="find \( -name '.venv' -o -name '.git' -o -name 'node_modules' \) -prune -o -print"
# # --preview '(bat {} --style numbers,changes --color=always--style numbers,changes --color=always || tree {}) 2> /dev/null' \
# # dafault
# export FZF_DEFAULT_OPTS="--bind=alt-k:up,alt-j:down,alt-K:preview-page-up,alt-J:preview-page-down"
# # catppuccin
# # export FZF_DEFAULT_OPTS="--bind=alt-k:up,alt-j:down,alt-K:preview-page-up,alt-J:preview-page-down \
# #                                              --color=bg+:#302D41,bg:#1E1E2E,spinner:#F8BD96,hl:#F28FAD \
# #                                              --color=fg:#D9E0EE,header:#F28FAD,info:#DDB6F2,pointer:#F8BD96 \
# #                                              --color=marker:#F8BD96,fg+:#F2CDCD,prompt:#DDB6F2,hl+:#F28FAD"
# export FZF_COMPLETION_TRIGGER=','

# # ripgrep
# # search hidden files ignoring .git/
# alias rg="rg --hidden --glob '!.git' --glob '!.venv' --glob '!node_modules'"

# # fzf ==> cd
# alias cdf='cd $(find \( -name ".venv" -o -name ".git" -o -name "node_modules" \) -prune -o -type d -print | fzf)'

# # fzf and ripgrep ==> nvim
# edit_fzf()
# {
#     # if in tmux
#     if [ "$TMUX" != "" ] && [ "$1" != "" ]
#     then
#         if [ "$1" = "sv" ]
#         then
#             fzf -e | xargs -r echo $EDITOR | xargs -r tmux split-window -vd
#         elif [ "$1" = "s" ]
#         then
#             fzf -e | xargs -r echo $EDITOR | xargs -r tmux split-window -hd
#         elif [ "$1" = "n" ]
#         then
#             fzf -e | xargs -r echo $EDITOR | xargs -r tmux new-window -d
#         else
#             fzf -e | xargs -r $EDITOR
#         fi
#     else
#         fzf -e | xargs -r $EDITOR
#     fi
# }
# alias eff=edit_fzf

# edit_rg()
# {
#     # if in tmux
#     if [ "$TMUX" != "" ] && [ "$1" != "" ]
#     then
#         if [ "$1" = "sv" ]
#         then
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r echo $EDITOR | xargs -r tmux split-window -vd
#         elif [ "$1" = "s" ]
#         then
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r echo $EDITOR | xargs -r tmux split-window -hd
#         elif [ "$1" = "n" ]
#         then
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r echo $EDITOR | xargs -r tmux new-window -d
#         else
#             rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r $EDITOR
#         fi
#     else
#         rg . | fzf --print0 -e | sed "s/:.*//" | xargs -r $EDITOR
#     fi
# }
# alias erg=edit_rg

# btop
alias btop="btop --utf-force"

# default editor
export EDITOR="/bin/vi"

# misc aliases
alias srcbrc="source ~/.bashrc"
alias xx="xdg-open $1 &>/dev/null"
alias q="vi /home/nv/.q"
alias up="sudo apt update && sudo apt upgrade"

alias la="ls -a"
alias ll="ls -al"
